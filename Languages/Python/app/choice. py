#!/usr/bin/python
import datetime
import random
import json

shoes = [{ "name" : "AlphyFly Next%",    "used km" : 123, "race" : "True",  "SFD" : "False", "LSD" : "False", "rainy day" : "False", "walk" : "False"},  
         { "name" : "VaporFly Next%",    "used km" : 175, "race" : "True",  "SFD" : "False", "LSD" : "False", "rainy day" : "False", "walk" : "False"}, 
         { "name" : "Tempo Next%",       "used km" : 120, "race" : "True",  "SFD" : "True",  "LSD" : "False", "rainy day" : "False", "walk" : "False"}, 
         { "name" : "Fly3",              "used km" : 293, "race" : "True",  "SFD" : "True",  "LSD" : "False", "rainy day" : "False", "walk" : "True"},  
         { "name" : "160X",              "used km" : 608, "race" : "True",  "SFD" : "True",  "LSD" : "True",  "rainy day" : "True",  "walk" : "True"},
         { "name" : "Feiying PB",        "used km" : 92,  "race" : "True",  "SFD" : "True",  "LSD" : "False", "rainy day" : "False", "walk" : "False"},
         { "name" : "Jueying essential", "used km" : 41,  "race" : "False", "SFD" : "False", "LSD" : "True",  "rainy day" : "False", "walk" : "False"},
         { "name" : "Jingtan",           "used km" : 70,  "race" : "False", "SFD" : "True",  "LSD" : "True",  "rainy day" : "False", "walk" : "False"},
         { "name" : "Takumi",            "used km" : 19,  "race" : "False", "SFD" : "True",  "LSD" : "False", "rainy day" : "False", "walk" : "True"},
         { "name" : "Zhanshen",          "used km" : 33,  "race" : "False", "SFD" : "False", "LSD" : "True",  "rainy day" : "True",  "walk" : "True"},
         { "name" : "K26",               "used km" : 700, "race" : "False", "SFD" : "False", "LSD" : "True",  "rainy day" : "False", "walk" : "True"},
         { "name" : "K21",               "used km" : 553, "race" : "False", "SFD" : "False", "LSD" : "True",  "rainy day" : "True",  "walk" : "True"},
         { "name" : "Ultraboost 18",     "used km" : 430, "race" : "False", "SFD" : "False", "LSD" : "True",  "rainy day" : "False", "walk" : "True"},
         { "name" : "Feiran",            "used km" : 108, "race" : "Fasle", "SFD" : "True",  "LSD" : "False", "rainy day" : "False", "walk" : "True"},
         { "name" : "Jifeng",            "used km" : 34,  "race" : "Fasle", "SFD" : "False", "LSD" : "True",  "rainy day" : "False", "walk" : "True"},
         { "name" : "160x 2.0",          "used km" : 30,  "race" : "True",  "SFD" : "True",  "LSD" : "True",  "rainy day" : "False", "walk" : "False"},
        ]

def init():
    with open("./shoes.json","r") as shoes_f:
        return json.load(shoes_f)

def update_box(shoes):
    with open("./shoes.json","w") as shoes_f:
        json.dump(shoes)

y=datetime.datetime.now().year
m=datetime.datetime.now().month
d=datetime.datetime.now().day

def by_used_km():
    return rslt(shoes, "used km")

def by_race():
    return flt(shoes, "race")

def by_rainy():
    return flt(shoes, "rainy day")

def by_walk():
    return flt(shoes, "walk")

def by_lsd():
    return flt(shoes, "LSD")

def for_lsd():
    return rslt(by_lsd(),"used km")

def by_sfd():
    return flt(shoes, "SFD")

def by_rainy_lsd():
    return flt(by_rainy(), "LSD")

def rslt(lis,a):
    return sorted(lis, key = lambda i: (i[a]))

def flt(lis,k):
    return filter(lambda x:x[k] == "True", lis)

def rnd(lst):
    return lst[int(random.random()*100%len(lst))]

def update_km(lis,name,km):
    for i in lis:
        if i[name] == name:
            i["used km"] = km

def increase_km(lis,name,plus):
    for i in lis:
        if i[name] == name:
            i["used km"] = i["used km"] + plus

def add_shoes(dict):
    shoes.append(dict)
   
def prt(lis):
    for i in lis:
         print(i)
    pirnt("------------------")

def output(lst):
    for i in lst:
         print(i["name"],"\t\t\t",i["used km"])

def pickone(lst):
     l=rnd(lst)
     return l

def check_same(d1,d2,k):
    return d1[k] == d2[k]

def find_same(d1,d2):
    return (check_same(d1,d2,"used km") and
            check_same(d1,d2,"race") and
            check_same(d1,d2,"SFD") and
            check_same(d1,d2,"LSD") and
            check_same(d1,d2,"rainy") and
            check_same(d1,d2,"walk"))

def check_same(b):
    c = []
    flag = [1] * len(b)
    for i in range(0,len(b)):
         if flag[i] == 0:
             continue
         c.append(b[i])
         for j in range(i+1,len(b)):
             if find_same(b[i],b[j]):
                  c.append(b[j])
                  flag[j] = 0
         pt(c)
         print("----------")

def print_help():
    print("Please input the valid command:")
    print("----lsd    : Filter LSD shoes")
    print("----km     : Filter by used km")
    print("----race   : Filter race shoes")
    print("----update : Update used km")
    print("----same   : Find the same usage shoes")
         
if __name__=="__main__":
    try:
        shoes = init()
    except:
        pass #Use shoes list in this file
    while True:
        cmd = input("Please input a command: ")
        if cmd == "lsd":
            output(for_lsd())
            print(pickone(for_lsd()))
        elif cmd == "km":
            output(by_used_km())
        elif cmd == "rainy":
            output(by_rainy())
        elif cmd == "race":
            output(by_race())
        elif cmd == "update":
            name = input("which one?")
            km = inout("how long?")
            update_km(shoes,name,km)
            update_shoes(shoes)
            output(shoes)
        elif cmd == "same":
            check_same(shoes)
        else:
            print_help()


